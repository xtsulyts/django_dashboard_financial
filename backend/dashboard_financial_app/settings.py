"""
Django settings for dashboard_financial_app project.

Generated by 'django-admin startproject' using Django 5.1.6.
"""

from pathlib import Path
from datetime import timedelta
import os
import logging
from dotenv import load_dotenv

load_dotenv()

logging.basicConfig(level=logging.DEBUG)

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-7@-w=*(z&$hx@(^$u=9l%#kcmt8r60f4zcl4#_9czye5(xjw)h'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',
    "rest_framework",
    "rest_framework_simplejwt",
    'coreapi',
    'django.contrib.sites',
    'allauth',
    # 'allauth.account',
    'allauth.socialaccount',
    # 'allauth.socialaccount.providers.google',
    'core',
    
]

CSRF_TRUSTED_ORIGINS = [
    'http://localhost:3000',
    # Otros orígenes si los necesitas
]

CORS_ALLOWED_ORIGINS = [
    'http://localhost:3000', 
    "http://127.0.0.1:3000", # Permitir solicitudes desde tu frontend
]

CORS_ALLOW_CREDENTIALS = True

# settings.py
CSRF_USE_SESSIONS = False  # Usar cookies en lugar de sesiones (valor por defecto)
CSRF_COOKIE_HTTPONLY = False  # Permite que JavaScript lea la cookie

SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(minutes=60),
    "REFRESH_TOKEN_LIFETIME": timedelta(days=1),
    "ROTATE_REFRESH_TOKENS": True,
    "BLACKLIST_AFTER_ROTATION": True,
}

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'allauth.account.middleware.AccountMiddleware',
    
    #'django.milldeleware.common.CommonMiddlewere'
]

REST_FRAMEWORK = {
    'DEFAULT_RENDERER_CLASSES': [
        'rest_framework.renderers.JSONRenderer',
        'rest_framework.renderers.BrowsableAPIRenderer',
    ],
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.BasicAuthentication',
        'rest_framework_simplejwt.authentication.JWTAuthentication',
        'rest_framework.authentication.TokenAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.AllowAny',
           'rest_framework.permissions.IsAuthenticated',   # O usa permisos más restrictivos según necesites
    ],
    'DEFAULT_SCHEMA_CLASS': 'rest_framework.schemas.coreapi.AutoSchema',
}




SITE_ID = 2  # Esto referencia al "Site" que crearemos en la base de datos

SOCIALACCOUNT_PROVIDERS = {
    'google': {
        'APP': {
            'client_id': os.getenv("GOOGLE_CLIENT_ID"),
            'secret': os.getenv("GOOGLE_SECRET"),
            'key': os.getenv("GOOGLE_KEY")
        },
        # 'SCOPE': os.getenv("GOOGLE_SCOPE").split(','),  # Convierte el string en lista
        # 'AUTH_PARAMS': {'access_type': os.getenv("GOOGLE_AUTH_ACCESS_TYPE")}
    }
}



AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',  # Para usuarios tradicionales
    'allauth.account.auth_backends.AuthenticationBackend',  # Para OAuth
]



TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'dashboard_financial_app.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }

DATABASES = {
    "default": {
        "ENGINE": os.getenv("DB_ENGINE"),
        "NAME": os.getenv("DB_NAME"),
        "USER": os.getenv("DB_USER"),
        "PASSWORD": os.getenv("DB_PASSWORD"),
        "HOST": os.getenv("DB_HOST"),
        "PORT": os.getenv("DB_PORT"),
    }
}

AUTH_USER_MODEL = 'core.custom_user'

#ACCOUNT_LOGIN_METHODS = ["email"]    # Login solo con email
#ACCOUNT_SIGNUP_FIELDS = ["username"]  # Registro pide username → ¡Error!
LOGIN_REDIRECT_URL = "http://localhost:3000/user_profile"
# Para manejar JWT con autenticación social (si usas tokens en vez de cookies)
SOCIALACCOUNT_LOGIN_ON_GET = True  # Simplifica el flujo
ACCOUNT_EMAIL_VERIFICATION = "none"  # Opcional: si no quieres doble verificación
ROOT_URLCONF = 'dashboard_financial_app.urls'
# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'